name: CI/CD Pipeline - GitHub Flow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'
        
    - name: Install frontend dependencies
      run: npm install
      working-directory: ./FrontEndApp
      
    - name: Build frontend
      run: npm run build --if-present
      working-directory: ./FrontEndApp
      
  build-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite
        
    - name: Install backend dependencies
      run: composer install --prefer-dist --no-progress
      working-directory: ./BackEndApp
      
    - name: Copy environment file
      run: cp .env.example .env
      working-directory: ./BackEndApp
      
    - name: Generate app key
      run: php artisan key:generate
      working-directory: ./BackEndApp
      
  test-frontend:
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'
        
    - name: Install frontend dependencies
      run: npm install
      working-directory: ./FrontEndApp
      
    - name: Run frontend tests
      run: npm test --if-present
      working-directory: ./FrontEndApp
      
  test-backend:
    needs: build-backend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite
        
    - name: Install backend dependencies
      run: composer install --prefer-dist --no-progress
      working-directory: ./BackEndApp
      
    - name: Copy environment file
      run: cp .env.example .env
      working-directory: ./BackEndApp
      
    - name: Generate app key
      run: php artisan key:generate
      working-directory: ./BackEndApp
      
    - name: Run database migrations
      run: php artisan migrate --force
      working-directory: ./BackEndApp
      
    - name: Run backend tests
      run: php artisan test
      working-directory: ./BackEndApp
      
  deploy-staging:
    needs: [test-frontend, test-backend]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - uses: actions/checkout@v2
    
    - name: Deploy to Staging
      run: echo "Deploying PR to staging environment for testing..."
      # Aquí irían los comandos reales de despliegue a staging
      
  deploy-production:
    needs: [test-frontend, test-backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
    
    - name: Deploy to Production
      run: echo "Deploying to production environment..."
      # Aquí irían los comandos reales de despliegue a producción
